// Code generated by "goja_imports -p {{.DstPkgName}} -i {{.SrcPkgName}} -go {{.GoFilename}} -ja {{.JSFilename}}"; DO NOT EDIT.
// Install by "go get -u -v github.com/garfeng/gojatools/cmd/goja_imports";
//go:generate goja_imports -p {{.DstPkgName}} -i {{.SrcPkgName}} -go {{.GoFilename}} -ja {{.JSFilename}}

package {{.DstPkgName}}

import (
    {{if or .TypeSpec .ValueSpec .FuncSpec}}
	origin "{{.SrcPkgName}}"
	{{end}}
	"github.com/garfeng/gojatools/importgo"
)

{{if .TypeSpec}}
// Type
type (
	{{range .TypeSpec}}
	{{.Doc}}
	{{$.ExportNameTitle}}_{{.Name}} = origin.{{.Name}} {{.Comment}}
	{{end}}
)
{{end}}

var ExportJS_{{.ExportNameTitle}} = map[string]interface{}{

{{if .TypeSpec}}
	{{range .TypeSpec}}
	{{.Doc}} 
	{{.Comment}}
	"_new{{.Name}}" : func(src *origin.{{.Name}}) *origin.{{.Name}} {  
		if src == nil {
			return new(origin.{{.Name}}) 
		}
		return src
	}, 
	{{end}}
{{end}}

{{if .ValueSpec}}
// Value
	{{range .ValueSpec}}
	{{.Doc}}
	"{{.Name}}" : {{GoNumFormat .}}, {{.Comment}} // {{.TypeName}} | {{.Value}}
	{{end}}
{{end}}

{{if .FuncSpec}}
// Function
	{{range .FuncSpec}}
	{{.Doc}}
	//func {{.Name}}({{range .Ins}} {{.Name}} {{.Type}},{{end}}) {{if .Outs}} ({{range .Outs}}	{{.Name}} {{.Type}}, {{end}}){{end}}
	"{{.Name}}" : {{GoFuncFormat .}}, {{.Comment}}
	{{end}}
{{end}}

}

func init(){
	importgo.Add("{{.JSPkgName}}", "{{.JSNamespace}}", ExportJS_{{.ExportNameTitle}})
}